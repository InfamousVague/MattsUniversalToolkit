/* Base */
.pin-input-group {
    position: relative;
    height: fit-content;
    display: inline-flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: var(--gap);
}
.pin-input-group .pin-display {
    display: inline-flex;
    gap: var(--gap);
    justify-content: center;
    padding: var(--padding) 0;
}
/* Accessability */
.pin-group:focus-within .dot {
    box-shadow: 0 0 0 var(--shadow-depth) var(--focus-color);
}
/* Dots */
.pin-input-group .pin-display .dot {
    width: var(--font-size);
    height: var(--font-size);
    background-color: var(--color);
    border-radius: 50%;
    border: var(--border-width) solid var(--border-color);
    display: inline-block;
}
.pin-input-group .pin-display .dot.filled {
    background-color: var(--info-color);
}
/* Hidden Stuff */
.pin-input-group .shadow-input {
    position: absolute;
    top: calc(var(--padding) / 1.5);
    left: 0;
}
.pin-input-group .shadow-input input {
    background-color: transparent;
    height: 100%;
    width: 100%;
    /* We avoid the simple use of setting opacity to zero here to support password managers */
    color: transparent;
    border: none;
    outline: none;
}
/* Chrome, Safari, Edge, Opera */
.pin-input-group .shadow-input input::-webkit-outer-spin-button,
.pin-input-group .shadow-input input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

/* Firefox */
.pin-input-group .shadow-input input[type=number] {
  -moz-appearance: textfield;
}
/* TODO: Highlight pins when shadow_input is focused */

.pin-input-group .shadow-input input::selection {
    background: transparent;
}

.pin-input-group .pin-keypad {
    width: calc((var(--input-height) * 3) + (var(--gap) * 3));
    display: inline-flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: center;
    gap: var(--gap);
}
.pin-input-group .pin-keypad .pin-key {
    height: var(--input-height);
    width: var(--input-height);
}

.pin-input-group .pin-keypad-controls {
    display: inline-flex;
    flex: 1;
    gap: var(--gap);
}