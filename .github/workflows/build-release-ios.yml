name: Build iOS

on:
  pull_request:
    types: [opened, synchronize, reopened, edited]

jobs:
  build:
    runs-on: macos-13
    name: Build iOS app
    steps:
      - name: Checkout source
        uses: actions/checkout@v4.2.2

      - name: Install Rust Stable
        uses: dtolnay/rust-toolchain@stable

      - name: Set up keychain and import certificate
        env:
          APPLE_CERTIFICATE: ${{ secrets.MACOS_CERTIFICATE }}
          APPLE_CERTIFICATE_PASSWORD: ${{ secrets.MACOS_CERTIFICATE_PWD }}
          PROVISIONING_PROFILE: ${{ secrets.PROVISIONING_PROFILE }}
        run: |
          # Create a temporary keychain
          security create-keychain -p "" build.keychain
          security set-keychain-settings -lut 21600 build.keychain
          
          # Import the certificate
          echo "$APPLE_CERTIFICATE" | base64 --decode > certificate.p12
          security import certificate.p12 -k build.keychain -P "$APPLE_CERTIFICATE_PASSWORD" -T /usr/bin/codesign

          # Import the provisioning profile
          echo "$PROVISIONING_PROFILE" | base64 --decode > provisioning_profile.mobileprovision
          cp provisioning_profile.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/
          
          # Set the keychain as default
          security list-keychains -d user -s build.keychain
          security unlock-keychain -p "" build.keychain

          # Give the codesign tool access to the keychain
          security set-key-partition-list -S apple-tool:,apple: -k "" build.keychain

      - name: Set up XCode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: 14.3.1

      - name: Setup Node.js
        uses: actions/setup-node@v4.1.0
        with:
          node-version: lts/*

      - name: Install dependencies
        run: npm install

      - name: Install Tauri CLI
        run: npm install -g @tauri-apps/cli

      - name: Set Rust target for iOS
        run: |
          rustup target add aarch64-apple-ios
          rustup target add x86_64-apple-ios
          rustup target add aarch64-apple-ios-sim

      - name: Run command to build iOS
        run: |
          if [ ! -f "./src-tauri/gen/apple/uplink.xcodeproj" ]; then
            echo "Xcode project not found at expected location: ./src-tauri/gen/apple/uplink.xcodeproj"
            echo "Listing contents of src-tauri/gen/apple/ for verification:"
            ls -la ./src-tauri/gen/apple/
            exit 1
          fi
          npm run tauri ios build -- --export-method app-store-connect

      - name: Create IPA for iOS
        run: |
          # Use Xcode to create the .ipa file for distribution
          xcodebuild -workspace ./src-tauri/gen/apple/uplink.xcodeproj \
                     -scheme uplink_iOS \
                     -destination generic/platform=iOS \
                     -archivePath uplink.xcarchive archive \
                     DEVELOPMENT_TEAM="${{ secrets.MACOS_NOTARIZATION_TEAM_ID }}" \
                     CODE_SIGN_IDENTITY="${{ secrets.MACOS_CERTIFICATE_NAME }}" \
                     PROVISIONING_PROFILE_SPECIFIER="signingprofileuplink"

      - name: Export IPA
        run: |
          # Export the IPA from the archive
          xcodebuild -exportArchive \
                     -archivePath uplink.xcarchive \
                     -exportOptionsPlist ./src-tauri/ios/exportOptions.plist \
                     -exportPath output \
                     -allowProvisioningUpdates

      - name: Notarize App with Apple
        env:
          APPLE_ID: ${{ secrets.MACOS_NOTARIZATION_APPLE_ID }}
          APPLE_PASSWORD: ${{ secrets.MACOS_NOTARIZATION_PWD }}
        run: |
          xcrun altool --notarize-app -f output/uplink.ipa \
                       --primary-bundle-id "com.satellite.uplink.app" \
                       -u "$APPLE_ID" \
                       -p "$APPLE_PASSWORD"

      - name: Upload release bundle
        uses: actions/upload-artifact@v4.4.3
        with:
          name: app-ios
          path: output/
          retention-days: 60

      - name: Remove temporary keychain
        run: |
          security delete-keychain build.keychain
