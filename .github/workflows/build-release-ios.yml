name: Build iOS

on:
    pull_request:
        types: [opened, synchronize, reopened, edited]

jobs:
    build:
        runs-on: macos-13
        name: Build iOS app
        steps:
            - name: Checkout source
              uses: actions/checkout@v4.2.2

            - name: Install Rust Stable
              uses: dtolnay/rust-toolchain@stable

            - name: Set up keychain and import certificate
              env:
                  APPLE_CERTIFICATE: ${{ secrets.MACOS_CERTIFICATE }}
                  APPLE_CERTIFICATE_PASSWORD: ${{ secrets.MACOS_CERTIFICATE_PWD }}
              run: |
                  # Create a temporary keychain
                  security create-keychain -p "" build.keychain
                  security set-keychain-settings -lut 21600 build.keychain
                  # Import the certificate
                  echo "$APPLE_CERTIFICATE" | base64 --decode > certificate.p12
                  security import certificate.p12 -k build.keychain -P "$APPLE_CERTIFICATE_PASSWORD" -T /usr/bin/codesign
                  # Set the keychain as default
                  security list-keychains -d user -s build.keychain
                  security unlock-keychain -p "" build.keychain
                  # Give the codesign tool access to the keychain
                  security set-key-partition-list -S apple-tool:,apple: -k "" build.keychain

            - name: Set up XCode
              uses: maxim-lobanov/setup-xcode@v1
              with:
                  xcode-version: 14.3.1

            - name: Setup Node.js
              uses: actions/setup-node@v4.1.0
              with:
                  node-version: lts/*

            - name: Install dependencies
              run: npm install

            - name: Install Tauri CLI
              run: npm install -g @tauri-apps/cli

            - name: Set Rust target for iOS
              run: |
                  rustup target add aarch64-apple-ios
                  rustup target add x86_64-apple-ios
                  rustup target add aarch64-apple-ios-sim

            - name: Run command to build iOS
              run: |
                  npm run tauri ios build -- --export-method app-store-connect

            - name: List recursive files src-tauri
              working-directory: src-tauri
              run: |
                  ls -lR ./

            - name: List recursive files ios
              working-directory: ios
              run: |
                  ls -lR ./

            - name: Create IPA for iOS
              env:
                  DEVELOPMENT_TEAM: ${{ secrets.MACOS_NOTARIZATION_TEAM_ID }}
                  CODE_SIGN_IDENTITY: ${{ secrets.MACOS_CERTIFICATE_NAME }}
              run: |
                  # Use Xcode to create the .ipa file for distribution
                  xcodebuild -workspace ./ios/App/App.xcworkspace \
                             -scheme App \
                             -destination generic/platform=iOS \
                             -archivePath App.xcarchive archive \
                             CODE_SIGN_IDENTITY="$CODE_SIGN_IDENTITY" \
                             DEVELOPMENT_TEAM="$DEVELOPMENT_TEAM" \
                             PROVISIONING_PROFILE_SPECIFIER="satelliteprovisioning"

            - name: Export IPA
              run: |
                  xcodebuild -exportArchive -archivePath App.xcarchive \
                             -exportOptionsPlist ./src-tauri/ios/exportOptions.plist \
                             -exportPath output \
                             -allowProvisioningUpdates

            - name: Notarize App with Apple
              env:
                  APPLE_ID: ${{ secrets.MACOS_NOTARIZATION_APPLE_ID }}
                  APPLE_PASSWORD: ${{ secrets.MACOS_NOTARIZATION_PWD }}
              run: |
                  xcrun altool --notarize-app -f output/App.ipa \
                               --primary-bundle-id "com.satellite.uplink.app" \
                               -u "$APPLE_ID" \
                               -p "$APPLE_PASSWORD"

            - name: Upload release bundle
              uses: actions/upload-artifact@v4.4.3
              with:
                  name: app-ios
                  path: output/
                  retention-days: 60

            - name: Remove temporary keychain
              run: |
                  security delete-keychain build.keychain
