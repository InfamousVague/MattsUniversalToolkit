name: Automated Tests

on:
  pull_request:
    types: [opened, synchronize, reopened, edited]
    paths-ignore:
      - ".github/workflows/**"
      - "!.github/workflows/automated-tests.yml"
      - ".gitignore"
      - ".prettierrc.json"
      - "PULL_REQUEST_TEMPLATE.md"
      - "README.md"
  workflow_dispatch:

jobs:
  playwright-run:
    timeout-minutes: 60
    runs-on: macos-latest
    permissions:
      checks: write
      pull-requests: write
      contents: write
      issues: read
    steps:
      - name: Checkout Uplink Web directory ðŸ”–
        uses: actions/checkout@v4

      - name: Checkout Automated Tests directory ðŸ”–
        uses: actions/checkout@v4
        with:
          repository: Satellite-im/automated-tests-web
          path: automated-tests

      - name: Setup Node.js for Uplink Web ðŸ”¨
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies for Uplink Web ðŸ“¦
        run: npm install

      - name: Install dependencies for Testing Repo ðŸ“¦
        working-directory: automated-tests
        run: npm install

      - name: Install Playwright Browsers
        working-directory: automated-tests
        run: npx playwright install --with-deps

      - name: Run server for Uplink Web
        run: npm run dev &
        continue-on-error: true # Ensure this step does not cause failure

      - name: Run Playwright tests
        working-directory: automated-tests
        run: PLAYWRIGHT_JSON_OUTPUT_NAME=report.json npx playwright test

      - uses: daun/playwright-report-summary@v3
        if: always()
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          report-file: ./automated-tests/playwright-report/report.json
          job-summary: false
          comment-title: "Automated Test Results"

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: automated-tests/playwright-report/
          retention-days: 5

      - name: Upload Allure results as artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: automated-tests/allure-results
          retention-days: 5

      - name: Add label if any of build jobs failed
        if: failure()
        uses: buildsville/add-remove-label@v2.0.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          labels: |
            Failed Automated Test
          type: add

  generate-report:
    if: always()
    needs: playwright-run
    runs-on: ubuntu-latest
    permissions:
      checks: write
      pull-requests: write
      contents: write
      issues: read
    steps:
      - name: Download Allure results artifact
        uses: actions/download-artifact@v4
        with:
          name: allure-results
          path: automated-tests/allure

      - name: Get Allure history
        uses: actions/checkout@v4
        if: always()
        continue-on-error: true
        with:
          repository: Satellite-im/test-reports
          ref: gh-pages
          path: gh-pages

      - name: Retry Generate Allure Report
        id: generate-report
        run: |
          #!/bin/bash
          set -e

          max_attempts=3
          attempt=1

          while [[ $attempt -le $max_attempts ]]; do
            echo "Attempt $attempt to generate Allure report..."
            if npx simple-elf/allure-report-action@master \
              --gh_pages=gh-pages \
              --allure_results=automated-tests/allure \
              --allure_report=allure-report \
              --allure_history=allure-history \
              --keep_reports=100; then
              echo "Report generation successful on attempt $attempt."
              exit 0
            else
              echo "Report generation failed on attempt $attempt. Retrying in 30 seconds..."
              ((attempt++))
              sleep 30
            fi
          done

          echo "All attempts to generate the report have failed."
          exit 1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy report to Github Pages with retry
        run: |
          for i in {1..3}; do
            echo "Attempt $i to deploy report to GitHub Pages..."
            if npx gh-pages -d allure-history; then
              echo "Deployment successful on attempt $i"
              break
            else
              echo "Deployment failed on attempt $i. Retrying in 30 seconds..."
              sleep 30
            fi
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Comment PR with Allure test results
        if: always() && github.event_name == 'pull_request'
        uses: mshick/add-pr-comment@v2
        with:
          message: |
            Playwright test execution is complete! You can find the test results report [here](https://satellite-im.github.io/test-reports/${{ github.run_number }})
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  remove-label:
    needs: [playwright-run, generate-report]
    runs-on: ubuntu-latest
    permissions:
      checks: write
      pull-requests: write
      contents: write
      issues: read
    steps:
      - name: Checkout directory ðŸ”–
        uses: actions/checkout@v4

      - name: Delete artifacts required on failed execution
        uses: geekyeggo/delete-artifact@v2
        with:
          name: |
            playwright-report
            allure-results

      - name: Remove label if all test jobs succeeded
        uses: buildsville/add-remove-label@v2.0.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          labels: |
            Failed Automated Test
          type: remove
