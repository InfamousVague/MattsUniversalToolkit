name: Generate Android APK
on:
  pull_request:
    types: [opened, synchronize, reopened, edited]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout ðŸ”–
        uses: actions/checkout@v4.1.7

      - name: Setup Node.js ðŸ”¨
        uses: actions/setup-node@v4.0.4
        with:
          node-version: 20

      - name: Install Dependencies ðŸ”¨
        run: npm i
        
      - name: Build Web Assets ðŸ”¨
        run: npm run build
        
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v2
    
      - name: Sync Capacitor Assets ðŸ”¨
        run: npx cap sync && npx cap copy android && cd android && ./gradlew assembleDebug

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk
          path: android/app/build/outputs/apk/debug/app-debug.apk

      - name: Get artifact URL
        id: get_artifact
        run: |
          artifact_id=$(gh api -H "Accept: application/vnd.github+json" /repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts | jq -r '.artifacts[] | select(.name=="debug-apk") | .id')
          download_url=$(gh api -H "Accept: application/vnd.github+json" /repos/${{ github.repository }}/actions/artifacts/$artifact_id/zip --jq '.archive_download_url')
          echo "::set-output name=apk_url::$download_url"

      - name: Post APK download link comment
        if: success()  # Only run if the build and upload succeed
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          message: |
            Download the .APK for this pull request:
            [debug-apk.zip](${{ steps.get_artifact.outputs.apk_url }})
